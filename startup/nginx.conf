server {
            listen   80;
            server_name  www.smarterer.com;
            rewrite ^/(.*) http://smarterer.com/$1 permanent;
           }


upstream smarterer_site {
         server 127.0.0.1:8080;
         }

upstream smarterer_server {
         server 127.0.0.1:8090;
         }

upstream smarterer_blog {
         server 184.106.216.130;
         }

upstream smarterer_partners {
       server 184.106.216.130:8001;
       }


# Secure SSL encrypted pages
server {
    listen 443 default ssl;
    server_name  smarterer.com;

    # temporary self-signed certificates
    ssl_certificate    /etc/ssl/smarterer/smarterer.com.crt;
    ssl_certificate_key    /etc/ssl/smarterer/smarterer.com.key;

   # server_name dev.smarterer.com;
   access_log  /var/log/nginx/dev.smarterer.com.access.log;
   error_log /var/log/nginx/dev.smarterer.com.error.log;

   location ~ ^/(api|oauth)/  {
       proxy_pass      http://smarterer_site; 
        
       # Make the proxied request look as natural as possible
       proxy_redirect off;
       proxy_set_header Host $host; #$proxy_host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # mod_rpaf will unpick this in Apache

       error_page  502 /error/502.html; # upstream servers are off
       error_page  500 503 504  /error/50x.html; # emergency fallback
       error_page  413 /error/413.html; # upload too large
    }
    
    # serve static files so they remain encrypted as well
     location ~ ^/(images|javascript|js|css|flash|media|static|sandbox)/  {
       root    /var/www/smarterer.com;
       expires 30d;
       # should probably generate static error page
       error_page  404 /error/404.html;
       error_page  403 /error/403.html;

     }
     
     # serve static files (I don't think robots like SSH, but what the heck)
     location /robots.txt {
        keepalive_requests 0;
        root    /var/www/smarterer.com;
     }

     location /  {
         # Auto redirect back to 'normal' site for non encrypted stuff
         rewrite ^/(.*) http://smarterer.com/$1; # permanent;
     }
}


server {
        listen   80 default;
        server_name  smarterer.com;

        access_log  /var/log/nginx/smarterer.com.access.log;
	client_max_body_size 4M;

   # serve static files
    location /provision.html {
      keepalive_requests 0;
      root    /var/www/smarterer.com;
    }

   # serve static files
    location /ping.html {
      keepalive_requests 0;
      root    /var/www/smarterer.com;
    }

    # serve static error files
     location /error/ {
       root    /var/www/smarterer.com;
       error_page  404 /error/404.html;
     }

    # serve static files
    location /robots.txt {
       keepalive_requests 0;
       root    /var/www/smarterer.com;
    }

     # serve static files
    location /favicon.ico {
      root    /var/www/smarterer.com;
      expires 30d;
    }

    location ~ ^/(api|oauth)/  {
        # Auto redirect to the secure site if hit as 'regular'
        # site
        rewrite ^/(.*) https://smarterer.com/$1; # permanent;
    }

   # serve static files
    location ~ ^/(images|javascript|js|css|flash|media|static|sandbox)/  {
      root    /var/www/smarterer.com;
      expires 30d;
      # should probably generate static error page
      error_page  404 /error/404.html;
      error_page  403 /error/403.html;

    }

    #     location /badge {
    #       root    /var/www/smarterer.com/cache;
    #   error_page           404 = @fetch;
    # }
    # 
    # location @fetch {
    #   internal;
    # 
    #       proxy_pass      http://127.0.0.1:8080; 
    #       # Make the proxied request look as natural as possible
    #       proxy_redirect off;
    #       proxy_set_header Host $host; #$proxy_host;
    #       proxy_set_header X-Real-IP $remote_addr;
    #       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # 
    #       # proxy_pass         http://thecentralwsusserver.domain.net:80;
    #   proxy_set_header   Range    '';
    #       
    #   proxy_store           on;
    #       root    /var/www/smarterer.com/cache;
    # }





    # location /test/data {
    #     proxy_pass      http://127.0.0.1:8090; 
    #     # Make the proxied request look as natural as possible
    #     proxy_redirect off;
    #     proxy_set_header Host $host; #$proxy_host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # mod_rpaf will unpick this in Apache
    #  }


    location / {
        proxy_pass      http://smarterer_site; 
        
        add_header    Cache-Control  "no-cache, no-store";
        add_header    Pragma no-cache;
        
        # Make the proxied request look as natural as possible
        proxy_redirect off;
        proxy_set_header Host $host; #$proxy_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # mod_rpaf will unpick this in Apache

        error_page  502 /error/502.html; # upstream servers are off
        error_page  500 503 504  /error/50x.html; # emergency fallback
	      error_page  413 /error/413.html; # upload too large
     }
    
    location /blog {
        proxy_pass      http://smarterer_blog/blog;
        # Make the proxied request look as natural as possible
        proxy_redirect off;
        proxy_set_header Host $host; #$proxy_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # mod_rpaf$
     }
     
     location /partners {
         proxy_pass      http://smarterer_partners/partners;
         # Make the proxied request look as natural as possible
         proxy_redirect off;
         proxy_set_header Host $host; #$proxy_host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # mod_rpaf$
      }

    location /jobs {
        proxy_pass      http://smarterer_blog/blog/jobs;
        # Make the proxied request look as natural as possible
        proxy_redirect off;
        proxy_set_header Host $host; #$proxy_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # mod_rpaf$
     }


}
